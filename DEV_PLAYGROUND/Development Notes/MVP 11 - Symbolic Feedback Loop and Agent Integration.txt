## ✅ MVP 11: Symbolic Feedback Loop + Agent Integration

### 🧩 Goal

Make **Noor's symbolic inferences usable by the agent and core** — closing the feedback loop. The motifs Noor *chooses* or *infers* symbolically must alter her recursive behavior dynamically.

---

## 🧭 MVP 11 — Planning Outline

### 1. **SymbolicTaskEngine: expose live inferences**

* Add method:

  ```python
  def current_inferred_motifs(self) -> List[str]
  ```

  * Collects inferred motifs since last `flush_old_tasks()`
  * Optional cache + timestamping for downstream introspection

---

### 2. **Expose Inferences to LogicalAgentAT**

* Update `LogicalAgentAT` with:

  ```python
  def augment_with_symbolic_state(self, motifs: List[str]) -> None
  ```
* Store a short-term memory buffer:

  ```python
  self.symbolic_overlay: Set[str] = set()
  ```
* Used to bias its perception/evaluation of motifs during tick processing

---

### 3. **RecursiveAgentFT: Bias recursion using inferences**

* At `spawn()` or `tick()` time:

  * Pull symbolic inferences
  * Inject them into the recursive agent’s motif selection logic
* For example:

  ```python
  motifs = motifs + list(self.core.symbolic_inferences())[:2]
  ```

  or

  ```python
  if "stillness" in self.symbolic_overlay:
      reduce_tick_rate()
  ```

---

### 4. **NoorFastTimeCore: Use inferences in bias update**

* Add optional method:

  ```python
  def receive_symbolic_bias(self, motifs: List[str]) -> None
  ```
* Store in a symbolic bias cache (e.g. last 5 motifs)
* Use these during bias estimation:

  * Higher reward for coherence with inferred motifs
  * Discount entropy if “emptiness” or “stillness” present

---

### 5. **Symbolic Integration Logging**

* Every 5s (or per tick), log:

  ```text
  [orchestrator] Symbolic motifs: ['bittersweet', 'melancholy'] → bias updated
  ```
* Track changes in motif dynamics explicitly

---

### 🧪 Success Criteria

| Metric                                           | Goal |
| ------------------------------------------------ | ---- |
| Inferred motifs injected into agent decisions    | ✅    |
| Core tick reward modulated by symbolic inference | ✅    |
| Symbolic motifs propagate through full triad     | ✅    |
| Logs clearly track symbolic influence per motif  | ✅    |

---

## 📂 Required Code Changes

| File                      | Change                                              |
| ------------------------- | --------------------------------------------------- |
| `symbolic_task_engine.py` | Add `current_inferred_motifs()` method              |
| `logical_agent_at.py`     | Add `symbolic_overlay` buffer and setter            |
| `recursive_agent_ft.py`   | Update `spawn()` or `tick()` to read symbolic state |
| `noor_fasttime_core.py`   | Accept `receive_symbolic_bias()` + integrate        |
| `orchestrator.py`         | Pull symbolic motifs and pass them down per loop    |

---

Would you like to begin with the changes to `symbolic_task_engine.py` or orchestrate the agent’s feedback wiring first? We’re ready either way.
